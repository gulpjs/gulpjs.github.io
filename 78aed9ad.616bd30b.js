(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{158:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(10),b=(a(0),a(176)),c={id:"watch",title:"watch()",hide_title:!0,sidebar_label:"watch()"},l={id:"api/watch",title:"watch()",description:"# watch()",source:"@site/docs/api/watch.md",permalink:"/docs/en/api/watch",sidebar_label:"watch()",sidebar:"docs",previous:{title:"parallel()",permalink:"/docs/en/api/parallel"},next:{title:"task()",permalink:"/docs/en/api/task"}},i=[{value:"Usage",id:"usage",children:[]},{value:"Signature",id:"signature",children:[{value:"Parameters",id:"parameters",children:[]},{value:"Returns",id:"returns",children:[]},{value:"Errors",id:"errors",children:[]},{value:"Options",id:"options",children:[]}]},{value:"Chokidar instance",id:"chokidar-instance",children:[]}],o={rightToc:i};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"watch"},"watch()"),Object(b.b)("p",null,"Allows watching globs and running a task when a change occurs. Tasks are handled uniformly with the rest of the task system."),Object(b.b)("h2",{id:"usage"},"Usage"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const { watch } = require('gulp');\n\nwatch(['input/*.js', '!input/something.js'], function(cb) {\n  // body omitted\n  cb();\n});\n")),Object(b.b)("h2",{id:"signature"},"Signature"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"watch(globs, [options], [task])\n")),Object(b.b)("h3",{id:"parameters"},"Parameters"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"note"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"globs",Object(b.b)("br",null),Object(b.b)("strong",{parentName:"td"},"(required)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string",Object(b.b)("br",null),"array"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/en/api/concepts#globs"}),"Globs")," to watch on the file system.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"options"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"object"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Detailed in ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"#options"}),"Options")," below.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"task"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"function",Object(b.b)("br",null),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/en/api/concepts#tasks"}),"task function")," or composed task - generated by ",Object(b.b)("inlineCode",{parentName:"td"},"series()")," and ",Object(b.b)("inlineCode",{parentName:"td"},"parallel()"),".")))),Object(b.b)("h3",{id:"returns"},"Returns"),Object(b.b)("p",null,"An instance of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"#chokidar-instance"}),"chokidar")," for fine-grained control over your watch setup."),Object(b.b)("h3",{id:"errors"},"Errors"),Object(b.b)("p",null,"When a non-string or array with any non-strings is passed as ",Object(b.b)("inlineCode",{parentName:"p"},"globs"),', throws an error with the message, "Non-string provided as watch path".'),Object(b.b)("p",null,"When a string or array is passed as ",Object(b.b)("inlineCode",{parentName:"p"},"task"),', throws an error with the message, "watch task has to be a function (optionally generated by using gulp.parallel or gulp.series)".'),Object(b.b)("h3",{id:"options"},"Options"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"default"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"note"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"ignoreInitial"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If false, the task is called during instantiation as file paths are discovered. Use to trigger the task during startup.",Object(b.b)("br",null),Object(b.b)("strong",{parentName:"td"},"Note:")," This option is passed to ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar")," but is defaulted to ",Object(b.b)("inlineCode",{parentName:"td"},"true")," instead of ",Object(b.b)("inlineCode",{parentName:"td"},"false"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"delay"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"200"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The millisecond delay between a file change and task execution. Allows for waiting on many changes before executing a task, e.g. find-and-replace on many files.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"queue"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"When true and the task is already running, any file changes will queue a single task execution. Keeps long running tasks from overlapping.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"events"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string",Object(b.b)("br",null),"array"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"[ 'add',",Object(b.b)("br",null),"'change',",Object(b.b)("br",null),"'unlink' ]"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The events being watched to trigger task execution. Can be ",Object(b.b)("inlineCode",{parentName:"td"},"'add'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'addDir'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'change'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'unlink'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'unlinkDir'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'ready'"),", and/or ",Object(b.b)("inlineCode",{parentName:"td"},"'error'"),". Additionally ",Object(b.b)("inlineCode",{parentName:"td"},"'all'")," is available, which represents all events other than ",Object(b.b)("inlineCode",{parentName:"td"},"'ready'")," and ",Object(b.b)("inlineCode",{parentName:"td"},"'error'"),".",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"persistent"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If false, the watcher will not keep the Node process running. Disabling this option is not recommended.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"ignored"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"array",Object(b.b)("br",null),"string",Object(b.b)("br",null),"RegExp",Object(b.b)("br",null),"function"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Defines globs to be ignored. If a function is provided, it will be called twice per path - once with just the path, then with the path and the ",Object(b.b)("inlineCode",{parentName:"td"},"fs.Stats")," object of that file.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"followSymlinks"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"When true, changes to both symbolic links and the linked files trigger events. If false, only changes to the symbolic links trigger events.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"cwd"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The directory that will be combined with any relative path to form an absolute path. Is ignored for absolute paths. Use to avoid combining ",Object(b.b)("inlineCode",{parentName:"td"},"globs")," with ",Object(b.b)("inlineCode",{parentName:"td"},"path.join()"),".",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"disableGlobbing"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If true, all ",Object(b.b)("inlineCode",{parentName:"td"},"globs")," are treated as literal path names, even if they have special characters.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"usePolling"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"When false, the watcher will use ",Object(b.b)("inlineCode",{parentName:"td"},"fs.watch()")," (or ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"https://github.com/strongloop/fsevents"}),"fsevents")," on Mac) for watching. If true, use ",Object(b.b)("inlineCode",{parentName:"td"},"fs.watchFile()")," polling instead - needed for successfully watching files over a network or other non-standard situations. Overrides the ",Object(b.b)("inlineCode",{parentName:"td"},"useFsEvents")," default.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"interval"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Combine with ",Object(b.b)("inlineCode",{parentName:"td"},"usePolling: true"),". Interval of file system polling.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"binaryInterval"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"300"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Combine with ",Object(b.b)("inlineCode",{parentName:"td"},"usePolling: true"),". Interval of file system polling for binary files.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"useFsEvents"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"When true, uses fsevents for watching if available. If explicitly set to true, supersedes the ",Object(b.b)("inlineCode",{parentName:"td"},"usePolling")," option. If set to false, automatically sets ",Object(b.b)("inlineCode",{parentName:"td"},"usePolling")," to true.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"alwaysStat"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"If true, always calls ",Object(b.b)("inlineCode",{parentName:"td"},"fs.stat()")," on changed files - will slow down file watcher. The ",Object(b.b)("inlineCode",{parentName:"td"},"fs.Stat")," object is only available if you are using the chokidar instance directly.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"depth"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Indicates how many nested levels of directories will be watched.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"awaitWriteFinish"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Do not use this option, use ",Object(b.b)("inlineCode",{parentName:"td"},"delay")," instead.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"ignorePermissionErrors"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"false"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Set to true to watch files that don't have read permissions. Then, if watching fails due to EPERM or EACCES errors, they will be skipped silently.",Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"atomic"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"number"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"100"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Only active if ",Object(b.b)("inlineCode",{parentName:"td"},"useFsEvents")," and ",Object(b.b)("inlineCode",{parentName:"td"},"usePolling"),' are false. Automatically filters out artifacts that occur from "atomic writes" by some editors. If a file is re-added within the specified milliseconds of being deleted, a change event - instead of unlink then add - will be emitted.',Object(b.b)("br",null),Object(b.b)("em",{parentName:"td"},"This option is passed directly to ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),"."))))),Object(b.b)("h2",{id:"chokidar-instance"},"Chokidar instance"),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"watch()")," method returns the underlying instance of ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/paulmillr/chokidar"}),"chokidar"),", providing fine-grained control over your watch setup. Most commonly used to register individual event handlers that provide the ",Object(b.b)("inlineCode",{parentName:"p"},"path")," or ",Object(b.b)("inlineCode",{parentName:"p"},"stats")," of the changed files."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"When using the chokidar instance directly, you will not have access to the task system integrations, including async completion, queueing, and delay.")),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const { watch } = require('gulp');\n\nconst watcher = watch(['input/*.js']);\n\nwatcher.on('change', function(path, stats) {\n  console.log(`File ${path} was changed`);\n});\n\nwatcher.on('add', function(path, stats) {\n  console.log(`File ${path} was added`);\n});\n\nwatcher.on('unlink', function(path, stats) {\n  console.log(`File ${path} was removed`);\n});\n\nwatcher.close();\n")),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"watcher.on(eventName, eventHandler)")),Object(b.b)("p",null,"Registers ",Object(b.b)("inlineCode",{parentName:"p"},"eventHandler")," functions to be called when the specified event occurs."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"note"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"eventName"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The events that may be watched are ",Object(b.b)("inlineCode",{parentName:"td"},"'add'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'addDir'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'change'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'unlink'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'unlinkDir'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'ready'"),", ",Object(b.b)("inlineCode",{parentName:"td"},"'error'"),", or ",Object(b.b)("inlineCode",{parentName:"td"},"'all'"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"eventHandler"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"function"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Function to be called when the specified event occurs. Arguments detailed in the table below.")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"argument"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"note"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"path"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The path of the file that changed. If the ",Object(b.b)("inlineCode",{parentName:"td"},"cwd")," option was set, the path will be made relative by removing the ",Object(b.b)("inlineCode",{parentName:"td"},"cwd"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"stats"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"object"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"An ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/en/api/concepts#file-system-stats"}),"fs.Stat")," object, but could be ",Object(b.b)("inlineCode",{parentName:"td"},"undefined"),". If the ",Object(b.b)("inlineCode",{parentName:"td"},"alwaysStat")," option was set to ",Object(b.b)("inlineCode",{parentName:"td"},"true"),", ",Object(b.b)("inlineCode",{parentName:"td"},"stats")," will always be provided.")))),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"watcher.close()")),Object(b.b)("p",null,"Shuts down the file watcher. Once shut down, no more events will be emitted."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"watcher.add(globs)")),Object(b.b)("p",null,"Adds additional globs to an already-running watcher instance."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"note"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"globs"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string",Object(b.b)("br",null),"array"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The additional globs to be watched.")))),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"watcher.unwatch(globs)")),Object(b.b)("p",null,"Removes globs that are being watched, while the watcher continues with the remaining paths."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"parameter"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"note"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"globs"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"string",Object(b.b)("br",null),"array"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The globs to be removed.")))))}d.isMDXComponent=!0},176:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return s}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),d=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=d(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},j=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,c=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),p=d(a),j=n,s=p["".concat(c,".").concat(j)]||p[j]||O[j]||b;return a?r.a.createElement(s,l(l({ref:t},o),{},{components:a})):r.a.createElement(s,l({ref:t},o))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,c=new Array(b);c[0]=j;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var o=2;o<b;o++)c[o]=a[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}j.displayName="MDXCreateElement"}}]);